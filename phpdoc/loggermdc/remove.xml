<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="loggermdc.get" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>LoggerMDC::remove</refname>
  <refpurpose>Remove the context identified by the key parameter.</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <!-- Example: All methods have this -->
   <type>void</type><methodname>LoggerMDC::remove</methodname>
   <!-- Example: Required parameter -->
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
  </methodsynopsis>
  <para>
		Remove the value identified by key from the current MDC and return the value if any.
		If no value exists for the key parameter, does nothing and return empty string.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       The key is the value identifier.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
<!--
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
  void
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function issue E_* level errors, and/or throw exceptions.
  </para>
 </refsect1>
 
 <refsect1 role="unicode">
  &reftitle.unicode;
  <para>
   Information specific to unicode, from the PHP 6 changes.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Enter the version of change here</entry>
       <entry>
        Describe the change
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
--> 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>remove</function> example</title>
    <para>
      Simple example of removing a value registered with the put method.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

// MDC variables can be displayed on the log file using the %X formater
// log4j.appender.Appender1.layout.ConversionPattern=%p %t ID="%X{request_id}" %c - %m%n

LoggerMDC::put("request_id", uniqid()); // register request_id on the context

$log = LoggerManager::getLogger("main");
$log->debug('starting main program. Request id is ' . LoggerMDC::get("request_id"));

$removedID = LoggerMDC::remove("request_id");
$log->debug("removed request id {$removedID} from logger MDC");

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Example of output on the log file...
DEBUG 0x000002ec ID="51ec4eb10a444" main - starting main program. Request id is 51ec4eb10a444
DEBUG 0x000002ec ID="" main - removed request id 51ec4eb10a444 from logger MDC
]]>
    </screen>
   </example>
  </para>
 </refsect1>
<!-- 
 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    Any notes that don't fit anywhere else should go here.
    90% of the time, notes, warnings or cautions are better placed in the
    parameters section. Consider that before using this section!
   </para>
  </caution>
  &note.language-construct;
  &note.not-bin-safe;
  &note.registerglobals;
 </refsect1>
-->
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>LoggerMDC::put</function></member>
    <member><function>LoggerMDC::get</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

